{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","className","cn","disabled","type","onClick","map","p","active","defaultProps","items","params","URLSearchParams","window","location","search","App","useState","Number","get","setPerPage","setCurrentPage","length","firstItemPerPage","lastItemPerPage","min","changeUrlParams","pageParam","perPageParam","set","String","history","replaceState","pathname","useEffect","id","onChange","e","newPerPage","target","value","htmlFor","page","newPage","slice","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1963b545.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange?: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange = () => {},\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <button\n          type=\"button\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === 1}\n          onClick={() => onPageChange(currentPage > 1 ? currentPage - 1 : 1)}\n        >\n          «\n        </button>\n      </li>\n      {getNumbers(1, totalPages).map(p => (\n        <li\n          className={cn('page-item', { active: currentPage === p })}\n          key={p}\n        >\n          <button\n            type=\"button\"\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => onPageChange(p)}\n          >\n            {p}\n          </button>\n        </li>\n      ))}\n      <li className={cn('page-item', { disabled: currentPage === totalPages })}>\n        <button\n          type=\"button\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === totalPages}\n          onClick={() => onPageChange(\n            currentPage < totalPages\n              ? currentPage + 1\n              : totalPages,\n          )}\n        >\n          »\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nPagination.defaultProps = {\n  onPageChange: () => {},\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst params = new URLSearchParams(window.location.search);\n\nexport const App: React.FC = () => {\n  const [\n    perPage,\n    setPerPage,\n  ] = useState(Number(params.get('perPage')) || 5);\n  const [\n    currentPage,\n    setCurrentPage,\n  ] = useState(Number(params.get('page')) || 1);\n  const total = items.length;\n  const firstItemPerPage = currentPage * perPage - perPage + 1;\n  const lastItemPerPage = Math.min(total, currentPage * perPage);\n\n  function changeUrlParams(pageParam: number, perPageParam: number) {\n    params.set('page', String(pageParam));\n    params.set('perPage', String(perPageParam));\n\n    window.history.replaceState({}, '', `${window.location.pathname}?${params}`);\n  }\n\n  function onPageChange(newPage: number) {\n    changeUrlParams(newPage, perPage);\n    setCurrentPage(newPage);\n  }\n\n  function onPerPageChange(newPerPage: number) {\n    changeUrlParams(1, newPerPage);\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n  }\n\n  useEffect(() => {\n    changeUrlParams(currentPage, perPage);\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemPerPage} - ${lastItemPerPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(e) => onPerPageChange(Number(e.target.value))}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={(page) => onPageChange(page)}\n      />\n\n      <ul>\n        {items\n          .slice(firstItemPerPage - 1, lastItemPerPage)\n          .map(el => <li data-cy=\"item\" key={el}>{el}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}